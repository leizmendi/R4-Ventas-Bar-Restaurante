[Operation]
;==========
;PayOutAmountPerTimeLimitAmount:
; To prevent robbers from being able to force a cashier to payout large amounts of money,
; this setting will put a limit to how big total amount that may be paid out per unit of time.
; The time interval is specified with the parameter PayOutAmountPerTimeSecondsLimit.
; If a payout command would result in a paid out amount larger than the limit, the payout
; will be refused and the function will return the error code CG_STATUS_PAYOUT_LIMIT.
; Default value is 0, i.e. no limit is set.
;
;PayOutAmountPerTimeLimitSeconds:
; This specifies the time interval in seconds that the amount limit PayOutAmountPerTimeAmountLimit is valid for.
; Default value is 60, i.e. 60 seconds.
;
;AskPayOutAmountLimit:
; Every payout with amountPay bigger than or equal to this amount, will render an askPayout
; prior to the payout to to see if the payout is possible.
; The amount should be specified without comma separator.
; Depending on currency, this value should be set to something appropriate.
; Default value is 4900, i.e. 49 Euro.
;
;PayOutOkCheck,ChangeOkCheck,RegretOkCheck:
; If this parameter is set to 1, an extra check will be performed to see if the status goes to OK again,
; after have been BUSY due to executing the command.
; If this parameter is set to 1, a timeout will expire if the status does not go low again.
; Observe that a timeout in any situation should not be interpreted as the command being not performed.
; Most likely it was performed, but a note left in the note compartement output may have left the machine in status BUSY.
; Default value for all three is 0, i.e. don't wait for status change from BUSY to OK.
;
;StatusOkTimeout:
; This timeout limit is used in the logout command.
; It's also used in the change, regret and payout commands, if the corresponding
; settings PayOutOkCheck,ChangeOkCheck,RegretOkCheck are set to 1.
; The setting defines the time the API is allowed to wait for the cash changer status to return to 0 (idle)
; after it's been changed to 1 (busy) as a result of starting processing the command.
; When this time has passed without getting the idle status, the API returns an error to the calling function.
; Default value is 10 (seconds).
;
;CurrencyDecimals:
; The number of decimals in the currency.
; In most cases there are two decimals (Euro, British Pounds, Swedish Kronor),
; but in some cases there's a different number of decimals.
; For example, the Kuwait Dinar is sub-divided into 1000 fils, i.e. has three decimals.
; Default value is 2.
;
;LegacySystem:
; When logging in to the cash changer, a command is first sent to find out which features the cash changer supports.
; If the hardware (or actually the firmware in the cash changer hardware) attached to the cash register is of an old version,
; it doesn't support this command. This results in a 10 second delay during login. To avoid this delay, the feature request command
; can be disabled by setting the LegacySystem setting to 1.
; Default value is 0.
;
;AutoDisable:
; This setting is only useful if we have a newer system, i.e. when the LegacySystem setting is 0.
; When logging in to the cash changer, payin is by default immediately enabled.
; If the POS uses the enable/disable payin functionality, it's probably desireable to configure
; the cash changer to have payin disabled immediately after login.
; This is done by setting this AutoDisable setting to 1.
; Default value is 0.
;
PayOutAmountPerTimeLimitAmount=0
PayOutAmountPerTimeLimitSeconds=60
AskPayOutAmountLimit=4900
PayOutOkCheck=0
ChangeOkCheck=0
RegretOkCheck=0
StatusOkTimeout=10
CurrencyDecimals=2
LegacySystem=0
AutoDisable=0


[Events]
;=======
;ForwardCallbackChangeOnly:
; If this parameter is set to 1, only CashGuard events with new information will be forwarded to the client.
; Default value is 1, i.e. only forward new information.
;
;LevelWarningFilter:
; A comma separated list of denomination and date pairs from when the specified denominations will no longer be reported in level warnings.
; A colon separates the date from the denomination for each pair, making the format of the parameter value: YYYYMMDD:denom,YYYYMMDD:denom,YYYYMMDD:denom
; This could be useful when a denomination is known to become obsolete on a date in the future.
; For example, the lowest Swedish denomination "0.50" will disappear on October 1, 2010.
; To make sure that no level warnings about this coin will be delivered from that date, the configuration should be:
;  LevelWarningFilter=20101001:50
; An example with two level warning filters where the 1 and 2 Cent coins level warnings will be filtered out on March 16, 2009 and later dates:
;  LevelWarningFilter=20090316:1,20090316:2
; Default value is empty, i.e. no filter is applied to the level warnings.
;
ForwardCallbackChangeOnly=1
LevelWarningFilter=


[Logging]
;========
; The following configurations determine what types of log messages that will be written to the log file.
;
;LoggEveryCallback:
; If this parameter is set to 1, all CashGuard events/callbacks will be logged to file.
; CashGuard callbacks every fifth second when no money is inserted, and every second when there is money inserted.
; If this parameter is set to 0, only CashGuard events/callbacks with new information will be logged.
; Default value is 0, i.e. don't log identical (unchanged) events.
;
;LoggSendEvents:
; If this parameter is set to 1, events received from CashGuard and fired to the API will be logged to file (limited by LoggEveryCallback).
; If it's set to 0, no events from CashGuard will be logged to file.
; Default value is 1.
;
;If the configuration of the two logging parameters above results in a log entry being “approved” for logging,
; the following configurations determine if the log entry really will be written to the log file.
; Only set them to 0 if there's very little disk available, since disabled logging makes debugging impossible.
;
;LogCRToCAPI:
; Log calls from the cash register application using the C API.
; Default value is 1.
;
;LogCAPIToCR:
; Log events sent from the C API to the cash register application using the C API.
; Default value is 1.
;
;LogComToCAPI:
; Log calls from the communication library (originating from the CashGuard machine) to the C API.
; Default value is 1.
;
;LogCAPIToCom:
; Log events sent from the C API to the communication library (for delivery to the CashGuard machine).
; Default value is 1.
;
;LogDebug:
; Additional internal tracing information, useful for problem solving.
; Default value is 1.
;
LoggEveryCallback=0
LoggSendEvents=1
LogCRToCAPI=1
LogCAPIToCR=1
LogComToCAPI=1
LogCAPIToCom=1
LogDebug=1
